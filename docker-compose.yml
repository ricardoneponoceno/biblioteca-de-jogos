
services:
  db:
    image: postgres:14
    container_name: gamelib-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: gamelib_db
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - gamelib-network

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: gamelib-backend
    restart: always
    env_file:
      - ./backend/.env
    environment:
      - DB_HOST=db
    ports:
      - "3000:3000"
    networks:
      - gamelib-network
    depends_on:
      - db

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: gamelib-frontend
    restart: unless-stopped
    ports:
      - "8081:80"
    depends_on:
      - backend
    networks:
      - gamelib-network

  # Novo serviço para a API HLTB
  api-hltb:
    build:
      context: ./api-hltb
      dockerfile: Dockerfile
    container_name: gamelib-api-hltb
    restart: unless-stopped
    environment: 
      - CORS_ORIGIN=http://localhost:8081
    ports:
      - "3002:8000" # Mapeia a porta 3002 do seu PC para a 8000 do contentor
    networks:
      - gamelib-network

  # Novo serviço para a API RAWG
  api-rawg:
    build:
      context: ./api-rawg
      dockerfile: Dockerfile
    container_name: gamelib-api-rawg
    restart: unless-stopped
    env_file:
      - ./api-rawg/.env # Carrega a chave de API do ficheiro .env
    environment:
      - CORS_ORIGIN=http://localhost:8081
    ports:
      - "3003:8000" # Mapeia a porta 3003 do seu PC para a 8000 do contentor
    networks:
      - gamelib-network

networks:
  gamelib-network:
    driver: bridge
